import commonjs from "@rollup/plugin-commonjs";
import json from "@rollup/plugin-json";
import resolve from "@rollup/plugin-node-resolve";
import typescript from "@rollup/plugin-typescript";
import { dirname, resolve as pathResolve } from "path";
import postcss from "rollup-plugin-postcss";
import { fileURLToPath } from "url";

const __dirname = dirname(fileURLToPath(import.meta.url));

// Custom plugin to handle "use client" directives
const removeUseClientDirective = {
  name: "remove-use-client-directive",
  transform(code) {
    return {
      code: code.replace(/^"use client";\n?/gm, ""),
      map: null,
    };
  },
};

export default {
  input: "src/index.ts",
  output: [
    {
      file: "dist/index.cjs.js",
      format: "cjs",
    },
    {
      file: "dist/index.mjs",
      format: "esm",
      globals: {
        fs: "null",
        path: "null",
        url: "null",
        crypto: "null",
        assert: "null",
        tty: "null",
        https: "null",
        http: "null",
        stream: "null",
        util: "null",
        os: "null",
        zlib: "null",
        buffer: "null",
        events: "null",
        process: "null",
        querystring: "null",
        string_decoder: "null",
        timers: "null",
        punycode: "null",
        net: "null",
        dns: "null",
        dgram: "null",
        child_process: "null",
        cluster: "null",
        module: "null",
        vm: "null",
        readline: "null",
        repl: "null",
        constants: "null",
        domain: "null",
        v8: "null",
        worker_threads: "null",
        perf_hooks: "null",
        async_hooks: "null",
        inspector: "null",
        trace_events: "null",
        wasi: "null",
      },
    },
  ],
  plugins: [
    removeUseClientDirective,
    resolve({
      extensions: [".js", ".jsx", ".ts", ".tsx", ".json"],
      alias: {
        "@": pathResolve(__dirname, "src"),
      },
      browser: true,
      preferBuiltins: false,
      dedupe: ["react", "react-dom"],
    }),
    commonjs({
      include: /node_modules/,
      exclude: [
        "fs",
        "path",
        "url",
        "crypto",
        "assert",
        "tty",
        "https",
        "http",
        "stream",
        "util",
        "os",
        "zlib",
        "buffer",
        "events",
        "process",
        "querystring",
        "string_decoder",
        "timers",
        "punycode",
        "net",
        "dns",
        "dgram",
        "child_process",
        "cluster",
        "module",
        "vm",
        "readline",
        "repl",
        "constants",
        "domain",
        "v8",
        "worker_threads",
        "perf_hooks",
        "async_hooks",
        "inspector",
        "trace_events",
        "wasi",
      ],
      namedExports: {
        "@radix-ui/react-dialog": [
          "Dialog",
          "DialogContent",
          "DialogTrigger",
          "DialogClose",
          "DialogOverlay",
          "DialogPortal",
          "DialogTitle",
          "DialogDescription",
          "DialogHeader",
          "DialogFooter",
        ],
      },
    }),
    typescript(),
    json({
      include: "**/*.json",
      preferConst: true,
    }),
    postcss({
      config: {
        path: "./postcss.config.cjs",
      },
      extract: false,
      modules: false,
      minimize: false,
      inject: true,
    }),
  ],
  external: [
    // Node.js built-in modules
    "fs",
    "path",
    "url",
    "crypto",
    "assert",
    "tty",
    "https",
    "http",
    "stream",
    "util",
    "os",
    "zlib",
    "buffer",
    "events",
    "process",
    "querystring",
    "string_decoder",
    "timers",
    "punycode",
    "net",
    "dns",
    "dgram",
    "child_process",
    "cluster",
    "module",
    "vm",
    "readline",
    "repl",
    "constants",
    "domain",
    "v8",
    "worker_threads",
    "perf_hooks",
    "async_hooks",
    "inspector",
    "trace_events",
    "wasi",

    "@radix-ui/react-radio-group",
    "@radix-ui/react-label",
    "@radix-ui/react-checkbox",
    "@radix-ui/react-select",
    "@radix-ui/react-roving-focus",
    "@radix-ui/react-presence",
    "@radix-ui/react-dismissable-layer",
    "@radix-ui/react-focus-guards",
    "@radix-ui/react-collection",
    "@radix-ui/react-popper",
    "@radix-ui/react-portal",
    "@radix-ui/react-focus-scope",
    "@radix-ui/react-dialog",
    "@radix-ui/react-dropdown-menu",
    "@radix-ui/react-popover",
    "@radix-ui/react-separator",
    "@radix-ui/react-slot",

    "react",
    "react-dom",
    "react/jsx-runtime",
    "@stripe/react-stripe-js",
    "@stripe/stripe-js",
    "zustand",
    "zod",
    "tailwindcss-animate",
    "class-variance-authority",
    "clsx",
    "tailwind-merge",
    "lucide-react",
    "react-hook-form",
    "@hookform/resolvers",
    "motion",
    "country-data-list",
    "cmdk",

    "i18next",
    "i18next-browser-languagedetector",
    "react-i18next",
  ],
};
